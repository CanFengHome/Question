1.如何禁用 assert ?
    见./01assert 中，在编译链接时，增加一个选项 -DNDEBUG就可以禁用掉assert的作用了

2.设数组 int arr[1024]. arr什么时候不再代表常量指针，而是数组本身？
    1.sizeof(arr)  此时就是代表的数组本身
    2.&arr + 1 偏移的是数组本身的长度，区别于 arr+1

3.设数组 int arr[1024]. 如何用指针表示？也就是数组指针
    typedef int (*pArr)[1024];
    pArr = &arr;  注意是数组本身 同时也要注意是数组指针，而不是指针数组

4.浮点数的相等的判断
    if (abs(a - b) < 1e-9)
        return true;

5.64位平台，sizeof(int)=4, 指针8字节，分析下面的值
    int main(int argc, const char * argv[]) {
        char* p[] = {"hello", "abc", "mike"};
        int len = (int)sizeof(p); // 
        int unitLen = (int)sizeof(*p); // 
        int count = len / unitLen; // 
        
        printf("%d\n", count);
        
        int data[] = {3, 5, 7};
        len = sizeof(data); // 
        unitLen = sizeof(*data); // 
        count = len / unitLen; // 
        printf("%d\n", count);
        
        int arrData[][3] = {{1,2,3}, {4,5,0}};
        len = sizeof(arrData); // 
        unitLen = sizeof(*arrData); // 
        count = len / unitLen; // 
        printf("%d\n", count);
        
        
        return 0;
    }

    答：
    int main(int argc, const char * argv[]) {
        char* p[] = {"hello", "abc", "mike"};
        int len = (int)sizeof(p); // 3 * 8
        int unitLen = (int)sizeof(*p); // 8 指向第一个元素-指针
        int count = len / unitLen; // 3
        
        printf("%d\n", count);
        
        int data[] = {3, 5, 7};
        len = sizeof(data); // 3 * 4
        unitLen = sizeof(*data); // 4
        count = len / unitLen; // 3
        printf("%d\n", count);
        
        int arrData[][3] = {{1,2,3}, {4,5,0}};
        len = sizeof(arrData); // 6 * 4
        unitLen = sizeof(*arrData); // 3 * 4
        count = len / unitLen; // 2
        printf("%d\n", count);
        
        
        return 0;
    }