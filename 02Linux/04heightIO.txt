1.有限状态机实现
    A ==== B
    A:从终端读入数据，写入管道    client
    B:从管道读取数据 写入终端   server

    test_state_mache/test_state.cpp

2.上面的代码中将读写的fd设置成了nohang的方式，如此不断的while，占满了CPU。
使用slect进行改写，当检测到有读写事件的时候驱动状态机。
也就是高效IO解决IO频繁抢夺CPU资源。
    test_heightIO/test_select.cpp

3.用poll改写上面的代码
    test_heightIO/test_poll.cpp

4.use epoll
    #include <sys/epoll.h>
    int epoll_create(int size);
    int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);
    EPOLL_CTL_ADD  EPOLL_CTL_MOD  EPOLL_CTL_DEL

    int epoll_wait(int epfd, struct epoll_event *events,
                      int maxevents, int timeout);
    typedef union epoll_data {
            void    *ptr;
            int      fd;
            uint32_t u32;
            uint64_t u64;
        } epoll_data_t;

    struct epoll_event {
        uint32_t     events;    /* Epoll events */
        epoll_data_t data;      /* User data variable */
    };
